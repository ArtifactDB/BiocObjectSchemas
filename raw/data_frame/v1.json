{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "data_frame/v1.json",
    "type": "object",
    "title": "Data Frame",
    "_description": [
        "Virtual data frame object stored in a yet-to-be-defined file format.",
        "Columns with simple types are stored directly in the file.",
        "For columns with non-obvious types (e.g., nested data frames), their contents should be stored in other files,",
        "and a pointer to a resource should be stored in the corresponding entry of `columns`",
        "(a placeholder column may be created in the file, depending on the format)."
    ],

    "allOf": [
        { "$ref": "../_common/v1.json" }
    ],

    "required": [
        "data_frame"
    ],
    "properties": {
        "data_frame": {
            "type": "object",
            "allOf": [
                { "$ref": "../_dimensions/v1.json" },

                {
                    "if": {
                        "properties": {
                            "version": {
                                "const": 1
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "columns": {
                                "items": {
                                    "allOf": [
                                        { "not": { "required": [ "format" ] } },
                                        { "not": { "required": [ "ordered" ] } }
                                    ]
                                }
                            }
                        }
                    }
                },

                {
                    "if": {
                        "required": [ "version"],
                        "properties": {
                            "version": {
                                "minimum": 2
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "columns": {
                                "items": {
                                    "allOf": [
                                        { 
                                            "not": {
                                                "properties": {
                                                    "type": {
                                                        "enum": [ "ordered", "date-time", "date" ]
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            ],
            "required": [
                "columns"
            ],
            "additionalProperties": false,
            "properties": {
                "columns": {
                    "type": "array",
                    "_description": [
                        "Information about the columnar fields in the data frame.",
                        "This should be in the same order as the columns in the on-disk representation."
                    ],
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "name",
                            "type"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "_description": [
                                    "Name of the column.",
                                    "Each column must have a non-empty name.",
                                    "Column names should not be duplicated within `columns`."
                                ],
                                "minLength": 1
                            },
                            "type": {
                                "type": "string",
                                "_description": [
                                    "Type of the column.\n\n",
                                    "- Integers, (floating-point) numbers and booleans are their usual selves.\n",
                                    "- Strings have an optional `format` property that restrict their contents, e.g., for dates or times.\n",
                                    "  This is only available in `version >= 2`.",
                                    "- The `factor` type is represented as an integer, to be used as a 1-based index into a vector of string levels.",
                                    "  This type has an additional `levels` property specifying the levels, as well as an `ordered` property indicating whether they are ordered.\n",
                                    "  - Older instances (`data_frame.version = 1`) store `factor` and `ordered` types as strings instead of integers.",
                                    "    All such strings are guaranteed to belong to the string levels in `levels`.",
                                    "    This representation is deprecated and the integer representation should be used in `version > 2`.\n",
                                    "- The `ordered` type is a deprecated alias for the `factor` type with the `ordered` property set to `true`;",
                                    "  the latter should be used in `version >= 2`.\n",
                                    "- The `date` type is a soft-deprecated alias for the `string` type with `format` property set to `date`;",
                                    "  the latter should be used in `version >= 2`.\n",
                                    "- The `date-time` type is a soft-deprecated alias for the `string` type with `format` property set to `date-time`;",
                                    "  the latter should be used in `version >= 2`.\n",
                                    "- Columns listed as `other` are assumed to be non-simple and should contain a `resource` property pointing to column's contents.\n"
                                ],
                                "enum": [ "integer", "number", "string", "factor", "ordered", "boolean", "date", "date-time", "other" ]
                            },

                            "levels": {
                                "type": "object",
                                "_description": [
                                    "Levels for a categorical factor.",
                                    "These are stored as a vector of unique non-missing strings.",
                                    "For ordered factors, the order is respected in the saved data frame.\n\n",
                                    "Older instances (`version = 1`) store the levels in a 1-column data frame;",
                                    "this column can simply be treated as the vector of strings."
                                ],
                                "properties": {
                                    "resource": {
                                        "_children":{
                                            "contains": [
                                                "data_frame", 
                                                "atomic_vector"
                                            ]
                                        }
                                    }
                                },
                                "allOf": [{ "$ref": "../_resource/v1.json" }]
                            }
                        },

                        "allOf": [
                            { "$ref": "../_string_format/v1.json" },
                            { "$ref": "../_factor_ordered/v1.json" },
                            { "$ref": "../_resource_raw/v1.json" },

                            {
                                "if": {
                                    "not": {
                                        "properties": {
                                            "type": {
                                                "const": "string"
                                            }
                                        }
                                    }
                                },
                                "then": {
                                    "not": {
                                        "required": [ "format" ]
                                    }
                                }
                            },

                            {
                                "if": {
                                    "not": {
                                        "properties": {
                                            "type": {
                                                "enum": ["factor", "ordered"]
                                            }
                                        }
                                    }
                                },
                                "then": {
                                    "not": {
                                        "required": [ "levels" ]
                                    }
                                }
                            },

                            {
                                "if": {
                                    "not": {
                                        "properties": {
                                            "type": {
                                                "const": "factor"
                                            }
                                        }
                                    }
                                },
                                "then": {
                                    "not": {
                                        "required": [ "ordered" ]
                                    }
                                }
                            },

                            {
                                "if": {
                                    "properties": {
                                        "type": {
                                            "const": "other"
                                        }
                                    }
                                },
                                "then": {
                                    "required": [ "resource" ]
                                },
                                "else": {
                                    "not": {
                                        "required": [ "resource" ]
                                    }
                                }

                            }
                        ]
                    }
                },

                "row_names": {
                    "type": "boolean",
                    "_description": [
                        "Whether the data frame has row names.",
                        "If `true`, these are stored in the first column of the CSV."
                    ],
                    "default": false
                },

                "column_data": {
                    "type": "object",
                    "_description": [
                        "Location of additional metadata for each column, stored as another `data_frame`.",
                        "Omitted if no additional per-column metadata is present."
                    ],
                    "properties": {
                        "resource": {
                            "_children":{
                                "contains": ["data_frame"]
                            }
                        }
                    },
                    "allOf": [ { "$ref": "../_resource/v1.json" } ]
                },
                "other_data": {
                    "type": "object",
                    "_description": [
                        "Location of additional metadata for this object, typically stored as a list.",
                        "Omitted if no other metadata is present."
                    ],
                    "properties": {
                        "resource": {
                            "_children":{
                                "contains": ["basic_list"]
                            }
                        }
                    },
                    "allOf": [ { "$ref": "../_resource/v1.json" } ]
                },

                "version": {
                    "type": "integer",
                    "description": "Minor version of this format.",
                    "default": 1,
                    "maximum": 2
                }
            }
        }
    }
}

